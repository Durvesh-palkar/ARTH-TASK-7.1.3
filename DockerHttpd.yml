- hosts: all
  vars_prompt:
  - name: Webpage
    prompt: "Enter the name of your webpage code file"
    private: no 

  tasks:

  - name: Creating a directory to mount RHEL DVD 
    file:
          path: "/dvd"
          state: directory

  - name: Mounting the DVD
    mount:
          src: "/dev/cdrom"
          path: "/dvd"
          state: mounted
          fstype: "iso9660"

  - name: Configuring yum repo for AppStream
    yum_repository:
          name: "dvd1"
          baseurl: "/dvd/AppStream"
          description: "DVD for appstream"
          gpgcheck: no

  - name: Configuring yum repo for BaseOS
    yum_repository:
          name: "dvd2"
          baseurl: "/dvd/BaseOS"
          description: "DVD for baseos"
          gpgcheck: no
 
  - name: Configuring yum repo for docker 
    yum_repository:
          name: docker-ce
          baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
          description: repo for installing docker
          gpgcheck: no

  - name: Installing docker
    package:
            name: "docker-ce-18.09.1-3.el7.x86_64"
            state: present

  - name: Starting docker services
    service:
            name: docker
            state: started
            enabled: yes

  - name: Installing python to get pip
    package:
            name: "python36"
            state: present

  - name: Installing docker SDK for python using pip
    pip:
            name: docker
            executable: pip3

  - name: Creating a directory on managed node
    file:
          path: "/root/ansible_files"
          state: directory

  - name: Copying webpage to managed node
    copy:
            src: "{{ Webpage }}"
            dest: "/root/ansible_files/index.html"

  - name: Pulling Apache httpd docker image
    docker_image:
            name: httpd
            source: pull

  - name: Launching container
    docker_container:
            name: DockerWebserver
            image: httpd
            volumes:
                    - /root/ansible_files:/usr/local/apache2/htdocs/
            exposed_ports: "80"
            ports: "8080:80"
            state: started

  - name: permit traffic in default zone for https service
    ansible.posix.firewalld:
            port: "80/tcp"
            permanent: yes
            state: enabled
            immediate: yes



